// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	midtranspayment "rub_buddy/features/midtranspayment"

	mock "github.com/stretchr/testify/mock"
)

// MidtransDataInterface is an autogenerated mock type for the MidtransDataInterface type
type MidtransDataInterface struct {
	mock.Mock
}

// CreatePayment provides a mock function with given fields: payment
func (_m *MidtransDataInterface) CreatePayment(payment midtranspayment.Midtrans) error {
	ret := _m.Called(payment)

	if len(ret) == 0 {
		panic("no return value specified for CreatePayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(midtranspayment.Midtrans) error); ok {
		r0 = rf(payment)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// VerifyPayment provides a mock function with given fields: orderId
func (_m *MidtransDataInterface) VerifyPayment(orderId string) error {
	ret := _m.Called(orderId)

	if len(ret) == 0 {
		panic("no return value specified for VerifyPayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(orderId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMidtransDataInterface creates a new instance of MidtransDataInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMidtransDataInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MidtransDataInterface {
	mock := &MidtransDataInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

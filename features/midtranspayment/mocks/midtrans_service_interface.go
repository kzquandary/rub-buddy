// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	midtranspayment "rub_buddy/features/midtranspayment"

	mock "github.com/stretchr/testify/mock"
)

// MidtransServiceInterface is an autogenerated mock type for the MidtransServiceInterface type
type MidtransServiceInterface struct {
	mock.Mock
}

// GenerateSnapURL provides a mock function with given fields: payment
func (_m *MidtransServiceInterface) GenerateSnapURL(payment midtranspayment.Midtrans) (midtranspayment.Midtrans, error) {
	ret := _m.Called(payment)

	if len(ret) == 0 {
		panic("no return value specified for GenerateSnapURL")
	}

	var r0 midtranspayment.Midtrans
	var r1 error
	if rf, ok := ret.Get(0).(func(midtranspayment.Midtrans) (midtranspayment.Midtrans, error)); ok {
		return rf(payment)
	}
	if rf, ok := ret.Get(0).(func(midtranspayment.Midtrans) midtranspayment.Midtrans); ok {
		r0 = rf(payment)
	} else {
		r0 = ret.Get(0).(midtranspayment.Midtrans)
	}

	if rf, ok := ret.Get(1).(func(midtranspayment.Midtrans) error); ok {
		r1 = rf(payment)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// VerifyPayment provides a mock function with given fields: orderId
func (_m *MidtransServiceInterface) VerifyPayment(orderId string) error {
	ret := _m.Called(orderId)

	if len(ret) == 0 {
		panic("no return value specified for VerifyPayment")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(string) error); ok {
		r0 = rf(orderId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMidtransServiceInterface creates a new instance of MidtransServiceInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMidtransServiceInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *MidtransServiceInterface {
	mock := &MidtransServiceInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

// Code generated by mockery v2.42.2. DO NOT EDIT.

package mocks

import (
	echo "github.com/labstack/echo/v4"
	mock "github.com/stretchr/testify/mock"
)

// PickupTransactionHandlerInterface is an autogenerated mock type for the PickupTransactionHandlerInterface type
type PickupTransactionHandlerInterface struct {
	mock.Mock
}

// CreatePickupTransaction provides a mock function with given fields:
func (_m *PickupTransactionHandlerInterface) CreatePickupTransaction() echo.HandlerFunc {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for CreatePickupTransaction")
	}

	var r0 echo.HandlerFunc
	if rf, ok := ret.Get(0).(func() echo.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(echo.HandlerFunc)
		}
	}

	return r0
}

// GetAllPickupTransaction provides a mock function with given fields:
func (_m *PickupTransactionHandlerInterface) GetAllPickupTransaction() echo.HandlerFunc {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetAllPickupTransaction")
	}

	var r0 echo.HandlerFunc
	if rf, ok := ret.Get(0).(func() echo.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(echo.HandlerFunc)
		}
	}

	return r0
}

// GetPickupTransactionByID provides a mock function with given fields:
func (_m *PickupTransactionHandlerInterface) GetPickupTransactionByID() echo.HandlerFunc {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for GetPickupTransactionByID")
	}

	var r0 echo.HandlerFunc
	if rf, ok := ret.Get(0).(func() echo.HandlerFunc); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(echo.HandlerFunc)
		}
	}

	return r0
}

// NewPickupTransactionHandlerInterface creates a new instance of PickupTransactionHandlerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewPickupTransactionHandlerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *PickupTransactionHandlerInterface {
	mock := &PickupTransactionHandlerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}

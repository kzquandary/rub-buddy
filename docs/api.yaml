openapi: 3.0.3
info:
  title: Kzquandary Mini Project - OpenAPI 3.0
  description: |-
    Mini Project for Alterra Academy with topic Rubbish Collection, user can create pickup request, topup balance, and chat. and collector can get transaction create transaction and chat
  contact:
    email: kaze@kzquandary.my.id
  version: 1.0.11
externalDocs:
  description: Find out more about Kzquandary
  url: https://kzquandary.my.id
servers:
  - url: https://api.kzquandary.my.id/api/v1
tags:
  - name: users
    description: Operations about user
  - name: collectors
    description: Operations about user
  - name: pickup
    description: Operations about pickup
  - name: transaction
    description: Operations about transaction
  - name: payment
    description: Operations about payment
  - name: chat
    description: Operations about chat
  - name: utils
    description: Operations about Utils API

paths:
  /users/register:
    post:
      tags:
        - users
      summary: Register User
      description: User melakukan register menggunakan email dan username, dan mendapatkan response token
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - username
                - name
                - password
                - address
                - gender
              properties:
                email:
                  type: string
                password:
                  type: string
                name:
                  type: string
                address:
                  type: string
                gender:
                  type: string
                  enum:
                    - Laki-laki
                    - Perempuan
              example:
                email: users@kzquandary.my.id
                name: Kaze User
                password: kzquandary
                address: jalan raya cimahi
                gender: Laki-laki
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Register Success
                data: []
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Email and password cannot be empty
                  data: []
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: false
                  message: User already exists
                  data: []
  /users/login:
    post:
      tags:
        - users
      summary: Login User
      description: User melakukan login menggunakan email dan username, dan mendapatkan response token
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: users@kzquandary.my.id
                password: kzquandary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Login Success
                data:
                  - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjUxMjI3OTI3NjI3NjQwOSIsImlhdCI6MTY4MzUxMjYyMiwiZXhwIjoxNjgzNTIwNjIyfQ.3Qw6nZ1Nl9L3zKq8UcF8ZI6BjB4sZ9aJ5rSfJY1w7gM
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: false
                  message: Email and password cannot be empty
                  data: []
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Invalid email or password
                  data: []
  /users:
    get:
      tags:
        - users
      summary: Get User Profile
      description: User mendapatkan profile user, untuk menggunakan route ini harus menggunakan token user
      operationId: getUserProfile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: true
                  message: Get User Success
                  data:
                    - id: 422344
                      name: Kaze User
                      email: user@kzquandary.my.id
                      address: Cimahi
                      gender: Laki-laki
                      balance: 50000
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: missing or malformed jwt
    put:
      tags:
        - users
      summary: Update User
      description: User melakukan update profile user, untuk menggunakan route ini harus menggunakan token user
      operationId: updateUser
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                address:
                  type: string
                gender:
                  type: string
                  enum:
                    - Laki-laki
                    - Perempuan
              example:
                name: Kaze User
                email: users@kzquandary.my.id
                address: Cimahi
                gender: Laki-laki
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                - id: 422344
                  name: Kaze User
                  email: users@kzquandary.my.id
                  address: Cimahi
                  gender: Laki-laki
  /collectors/register:
    post:
      tags:
        - collectors
      summary: Register User
      description: User melakukan register menggunakan email dan username, dan mendapatkan response token
      operationId: register
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - name
                - password
                - gender
              properties:
                email:
                  type: string
                password:
                  type: string
                address:
                  type: string
                gender:
                  type: string
                  enum:
                    - Laki-laki
                    - Perempuan
              example:
                email: collectors@kzquandary.my.id
                name: Kaze Collector
                password: kzquandary
                gender: Laki-laki

      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Register Success
                data: []
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Email and password cannot be empty
                  data: []
        "409":
          description: Conflict
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: false
                  message: User already exists
                  data: []
  /collectors/login:
    post:
      tags:
        - collectors
      summary: Login Collector
      description: Collector melakukan login menggunakan email dan username, dan mendapatkan response token
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
              example:
                email: collectors@kzquandary.my.id
                password: kzquandary
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Login Success
                data:
                  - token: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY0MjUxMjI3OTI3NjI3NjQwOSIsImlhdCI6MTY4MzUxMjYyMiwiZXhwIjoxNjgzNTIwNjIyfQ.3Qw6nZ1Nl9L3zKq8UcF8ZI6BjB4sZ9aJ5rSfJY1w7gM
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: false
                  message: Email and password cannot be empty
                  data: []
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Invalid email or password
                  data: []
  /collectors:
    get:
      tags:
        - collectors
      summary: Get Collector Profile
      description: Collector mendapatkan profile collector, untuk menggunakan route ini harus menggunakan token collector
      operationId: getCollectorProfile
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: true
                  message: Get User Success
                  data:
                    - id: 595850
                      name: Kaze Collector
                      email: collectors@kzquandary.my.id
                      gender: Laki-laki
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                example:
                  message: missing or malformed jwt
    put:
      tags:
        - collectors
      summary: Update Collector
      description: Collector melakukan update profile collector, untuk menggunakan route ini harus menggunakan token collector
      operationId: updateUser
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                email:
                  type: string
                address:
                  type: string
                gender:
                  type: string
                  enum:
                    - Laki-laki
                    - Perempuan
              example:
                name: Kaze Collector
                email: collectors@kzquandary.my.id
                gender: Laki-laki
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                - id: 595850
                  name: Kaze Collector
                  email: collectors@kzquandary.my.id
                  gender: Laki-laki
  /pickups:
    post:
      tags:
        - pickup
      summary: Create Pickup
      description: User membuat pickup, harga normal pickup itu Rp. 3000 per kg, untuk menggunakan route ini harus menggunakan token user
      operationId: pickup
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - weight
                - description
                - image
              properties:
                weight:
                  type: number
                description:
                  type: string
                image:
                  type: string
              example:
                weight: 8
                description: tolong ambil depan rumah
                image: "https://storage.googleapis.com/kzquandary/rubbuddy/90472c83-70a2-47b1-acb4-fb2014e87decsamurai-anime-girl-katana-sci-fi-4k-wallpaper-uhdpaper.com-221@3@a.jpg"
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                    properties:
                      token:
                        type: string
              example:
                status: true
                message: Pickup Created
                data: []
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Pickup Failed
                  data: []
    get:
      tags:
        - pickup
      summary: Get All Pickup
      description: User mendapatkan semua pickup, untuk menggunakan route ini harus menggunakan token collector
      operationId: getAllPickup
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
              example:
                status: true
                message: Pickup Found
                data:
                  - pickup_request_id: 591981
                    user:
                      user_id: 422344
                      user_name: "Kaze User"
                    weight: 10.5
                    address: "Cimahi"
                    description: "Sample description"
                    earnings: 31500
                    image: "https://storage.googleapis.com/kzquandary/rubbuddy/90472c83-70a2-47b1-acb4-fb2014e87decsamurai-anime-girl-katana-sci-fi-4k-wallpaper-uhdpaper.com-221@3@a.jpg"
                  - pickup_request_id: 686450
                    user:
                      user_id: 422344
                      user_name: "Kaze User"
                    weight: 10
                    address: "Cimahi"
                    description: "Sample description"
                    earnings: 30000
                    image: "https://storage.googleapis.com/kzquandary/rubbuddy/bfffa9a1-5a7e-4a44-8d4e-94dd9f9227a9samurai-anime-girl-katana-sci-fi-4k-wallpaper-uhdpaper.com-221@3@a.jpg"
        "404":  
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Pickup not found
                  data: []
  /pickups/{id}:
    get:
      tags:
        - pickup
      summary: Get Pickup
      description: User mendapatkan pickup
      operationId: getPickup
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 1234
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
              example:
                status: true
                message: Pickup Found
                data:
                  - pickup_request_id: 686450
                    user:
                      user_id: 422344
                      user_name: "Kaze User"
                    weight: 10
                    address: "Cimahi"
                    description: "Sample description"
                    earnings: 30000
                    image: "https://storage.googleapis.com/kzquandary/rubbuddy/bfffa9a1-5a7e-4a44-8d4e-94dd9f9227a9samurai-anime-girl-katana-sci-fi-4k-wallpaper-uhdpaper.com-221@3@a.jpg"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Pickup not found
                  data: []
    delete:
      tags:
        - pickup
      summary: Delete Pickup
      description: User menghapus pickup
      operationId: deletePickup
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 1234
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
              example:
                status: true
                message: Pickup Deleted
                data: []
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
              example:
                status: false
                message: Gagal menghapus pickup
                data: []
  /transactions:
    post:
      tags:
        - transaction
      summary: Create Transaction
      description: Collector melakukan pickup, untuk menggunakan route ini harus menggunakan token collector
      operationId: transaction
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - pickup_id
              properties:
                pickup_id:
                  type: string
              example:
                pickup_request_id: 1234
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
              example:
                status: true
                message: Pickup Transaction Created
                data: 
                - id: 716553
                  pickup_request_id: 484900
                  pickup_time: "2024-05-09T22:21:00Z"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Pickup Transaction Failed
                  data: []
    get:
      tags:
        - transaction
      summary: Get Transaction
      description: Collector mendapatkan transaction, untuk menggunakan route ini harus menggunakan token collector
      operationId: getTransaction
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
              example:
                status: true
                message: Transaction Found
                data:
                    - id: 716553
                      user:
                        id: 239549
                        name: Kaze User
                        address: Cimahi
                      collector:
                        id: 958063
                        name: Kaze Collector
                      tps:
                        id: 1
                        name: TPS Cimahi
                      pickup_time: "2024-05-09T22:21:00Z"
                    - id: 716551
                      user:
                        id: 239549
                        name: Kaze User
                        address: Cimahi
                      collector:
                        id: 958063
                        name: Kaze Collector
                      tps:
                        id: 1
                        name: TPS Cimahi
                      pickup_time: "2024-05-09T22:21:00Z"
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Transaction not found
                  data: []
  /transactions/{id}:
    get:
      tags:
        - transaction
      summary: Get Transaction
      description: Collector mendapatkan transaction
      operationId: getTransaction
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
          example: 1234
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
              example:
                status: true
                message: Transaction Found
                data:
                    - id: 716553
                      user:
                        id: 239549
                        name: Kaze User
                        address: Cimahi
                      collector:
                        id: 958063
                        name: Kaze Collector
                      pickup_time: "2024-05-09T22:21:00Z"
                      tps:
                        id: 1
                        name: TPS Cimahi
                        address: Cimahi
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Transaction not found
                  data: []
  /payments:
    post:
      tags:
        - payment
      summary: User melakukan Topup Saldo
      description: User melakukan Topup Saldo
      operationId: createPayment
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
              properties:
                amount:
                  type: number
              example:
                amount: 100000
      responses:
        "201":
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: true
                  message: Payment Created
                  data: 
                    - order_id: "106b83bd-8aa7-457c-b1f9-7fcdbe636a57"
                      user_id: 239549
                      amount: 100000
                      snap_url: "https://app.sandbox.midtrans.com/snap/v4/redirection/e91d9403-e920-4b95-a9e1-cacea6bd4274"
  /payments/verify/{order_id}:
    get:
      tags:
        - payment
      summary: Verify Payment
      description: Verify Payment
      operationId: verifyPayment
      security:
        - bearerAuth: []
      parameters:
        - name: order_id
          in: path
          required: true
          schema:
            type: string
          example: 106b83bd-8aa7-457c-b1f9-7fcdbe636a57
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: true
                  message: Payment Verified
                  data: []
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Payment not found
                  data: []
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Payment already verified
                  data: []
  /media/upload:
    post:
      tags:
        - utils
      summary: Upload Image
      description: User upload media
      operationId: uploadMedia
      security:
        - bearerAuth: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              required:
                - image
              properties:
                image:
                  type: string
                  format: binary
              example:
                file: image
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: true
                  message: Media Uploaded
                  data:
                    - image_url: "https://storage.googleapis.com/kzquandary/rubbuddy/90472c83-70a2-47b1-acb4-fb2014e87decsamurai-anime-girl-katana-sci-fi-4k-wallpaper-uhdpaper.com-221@3@a.jpg"
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Upload Media Failed
                  data: []
  /chats:
    get:
      tags:
        - chat
      summary: Get Chat
      description: Get Chat
      operationId: getChat
      security:
        - bearerAuth: []
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                  data:
                    type: array
                example:
                  status: true
                  message: Get Chat Success
                  data: 
                  - chat_id : 475645
                    pickup_transaction_id : 475356
                    user :
                      - user_id : 239549
                        user_name : Kaze User
                    collector :
                      - collector_id : 958063
                        collector_name : Kaze Collector
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: boolean
                  message:
                    type: string
                example:
                  status: false
                  message: Chat not found
                  data: []
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT  

security:
  - bearerAuth: []